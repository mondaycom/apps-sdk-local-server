openapi: 3.0.0
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    JsonValue:
      anyOf:
        - type: string
        - type: number
          format: double
        - type: boolean
        - items:
            $ref: '#/components/schemas/JsonValue'
          type: array
        - properties: {}
          additionalProperties:
            $ref: '#/components/schemas/JsonValue'
          type: object
      nullable: true
    SetStorageForKeyRequestBody:
      properties:
        shared:
          type: boolean
        previousVersion:
          type: string
        value:
          type: string
      required:
        - value
      type: object
    Period:
      enum:
        - DAILY
        - MONTHLY
        - YEARLY
      type: string
    IncrementStorageForKeyRequestBody:
      properties:
        kind:
          type: string
        renewalDate:
          type: string
          format: date-time
        incrementBy:
          type: number
          format: double
        period:
          $ref: '#/components/schemas/Period'
      required:
        - kind
        - renewalDate
        - incrementBy
        - period
      type: object
    SetSecureStorageForKeyRequestBody:
      properties:
        value:
          type: string
      required:
        - value
      type: object
    SetSecretForKeyRequestBody:
      properties:
        value:
          type: string
      required:
        - value
      type: object
    QueueRequestBody:
      properties:
        message:
          type: string
      required:
        - message
      type: object
    ValidateSecretRequestBody:
      properties:
        secret:
          type: string
      required:
        - secret
      type: object
    LogMethods:
      enum:
        - debug
        - error
        - warn
        - info
      type: string
    Record_string.unknown_:
      properties: {}
      additionalProperties: {}
      type: object
      description: Construct a type with a set of properties K of type T
    WriteLogRequestBody:
      properties:
        params:
          $ref: '#/components/schemas/Record_string.unknown_'
        error:
          anyOf:
            - type: string
            - $ref: '#/components/schemas/Record_string.unknown_'
        message:
          type: string
        method:
          $ref: '#/components/schemas/LogMethods'
      required:
        - method
      type: object
    SetEnvironmentForKeyRequestBody:
      properties:
        value:
          $ref: '#/components/schemas/JsonValue'
      required:
        - value
      type: object
  securitySchemes: {}
info:
  title: apps-sdk-local-server
  version: 1.0.0
  description: A local server to support the `apps-sdk` package local development
  license:
    name: MIT
  contact:
    name: monday.com Apps Team
paths:
  /storage/{key}:
    get:
      operationId: GetValue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  version:
                    type: string
                  value:
                    $ref: '#/components/schemas/JsonValue'
                required:
                  - value
                type: object
      tags:
        - Storage
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
    delete:
      operationId: DeleteValue
      responses:
        '204':
          description: No Content
      tags:
        - Storage
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
    put:
      operationId: UpdateValue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonValue'
      tags:
        - Storage
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetStorageForKeyRequestBody'
  /storage/counter/increment:
    put:
      operationId: CounterIncrement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      tags:
        - Storage
      security: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncrementStorageForKeyRequestBody'
  /secure-storage/{key}:
    get:
      operationId: GetSecureValue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  value:
                    $ref: '#/components/schemas/JsonValue'
                required:
                  - value
                type: object
      tags:
        - Secure Storage
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
    delete:
      operationId: DeleteSecureValue
      responses:
        '204':
          description: No Content
      tags:
        - Secure Storage
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
    put:
      operationId: UpdateSecureValue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      tags:
        - Secure Storage
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSecureStorageForKeyRequestBody'
  /secrets/{key}:
    get:
      operationId: GetSecretForKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      tags:
        - Secrets
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
  /test/secrets/{key}:
    put:
      operationId: SetSecretForKey
      responses:
        '204':
          description: No Content
      tags:
        - Test Routes
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSecretForKeyRequestBody'
  /pub-sub/queue:
    post:
      operationId: Queue
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                required:
                  - id
                type: object
      tags:
        - PubSub
      security: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueRequestBody'
  /pub-sub/validate-secret:
    post:
      operationId: ValidateSecret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  valid:
                    type: boolean
                required:
                  - valid
                type: object
      tags:
        - PubSub
      security: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateSecretRequestBody'
  /logs:
    post:
      operationId: WriteLog
      responses:
        '204':
          description: No Content
      tags:
        - Logs
      security: []
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteLogRequestBody'
  /environments/{key}:
    get:
      operationId: GetEnvironmentForKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {}
      tags:
        - Environment
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
  /test/environments/{key}:
    put:
      operationId: SetEnvironmentForKey
      responses:
        '204':
          description: No Content
      tags:
        - Test Routes
      security: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetEnvironmentForKeyRequestBody'
servers:
  - url: http://localhost:59595
    description: monday-code Local dev server
